#  msgproc.bashlib - standard message processing functionality

:<<COPYRIGHT

Copyright (C) 2012 Frank Scheiner

The program is distributed under the terms of the GNU General Public License

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

COPYRIGHT

:<<INCLUDE
../file.bashlib
INCLUDE

. "$_LIB"/ipc/file.bashlib

################################################################################

ipc/file/msgproc/processMsg() {
        #  standard message processing functionality like returning the PID, the
        #+ host a process runs on, if it is alive or stopping on request.
        #
        #  usage:
        #+ ipc/file/msgproc/processMsg message inbox
        local _message="$1"
        local _inbox="$2"

        local _command=""
        local _answerBox=""

        _command=$( echo "$_message" | cut -d ';' -f 1 )
        _answerBox=$( echo "$_message" | cut -d ';' -f 2 )

        #echo "($$) in ipc/file/msgproc/processMsgStdFunc(): _message=\"$_message\" _command=\"$_command\""

        #  standard message processing functionality
        if [[ "$_command" == "ALIVE?" ]]; then
                ipc/file/sendMsg "$_answerBox" "YES;$_inbox"
                return
        elif [[ "$_command" == "STOP" ]]; then
                ipc/file/sendMsg "$_answerBox" "STOPPING;$_inbox"
                exit
        elif [[ "$_command" == "PID?" ]]; then
                ipc/file/sendMsg "$_answerBox" "$$;$_inbox"
                return
        elif [[ "$_command" == "HOST?" ]]; then
                ipc/file/sendMsg "$_answerBox" "$( hostname --fqdn );$_inbox"
                return
        #  to expand add new commands and handling here
        #elif [[ "$_command" == "<NEW_COMMAND>" ]]; then
        #        <DO_SOMETHING>
        #        ipc/file/sendMsg "$_answerBox" "$( hostname --fqdn );$_inbox"
        #        return
        #  the last command should always be the "UNKNOWN COMMAND".
        else
                ipc/file/sendMsg "$_answerBox" "UNKNOWN COMMAND;$_inbox"
                return
        fi

}

